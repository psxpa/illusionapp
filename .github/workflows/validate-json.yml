name: 🔍 Validate JSON Files
on: 
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  validate-json:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v3
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: ✅ Validate JSON syntax
      run: |
        echo "🔍 Validating JSON files..."
        for file in *.json; do
          if [ -f "$file" ]; then
            echo "Checking $file..."
            python -m json.tool "$file" > /dev/null
            if [ $? -eq 0 ]; then
              echo "✅ $file is valid JSON"
            else
              echo "❌ $file has syntax errors"
              exit 1
            fi
          fi
        done
        
    - name: 🧪 Validate JSON structure
      run: |
        echo "🔍 Validating JSON structure..."
        python3 << 'EOF'
        import json
        import sys
        
        try:
            with open('Json_canales_tv.json', 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # Validar estructura requerida
            required_keys = ['version', 'languages', 'lastUpdate']
            for key in required_keys:
                if key not in data:
                    print(f"❌ Missing required key: {key}")
                    sys.exit(1)
            
            # Validar idiomas
            required_langs = ['en', 'es', 'pt']
            for lang in required_langs:
                if lang not in data['languages']:
                    print(f"❌ Missing language: {lang}")
                    sys.exit(1)
                
                if 'channels' not in data['languages'][lang]:
                    print(f"❌ Missing channels for language: {lang}")
                    sys.exit(1)
                
                channels = data['languages'][lang]['channels']
                for i, channel in enumerate(channels):
                    required_channel_keys = ['name', 'active', 'imageUrl', 'isIframe', 'streamUrl']
                    for key in required_channel_keys:
                        if key not in channel:
                            print(f"❌ Channel {i} in {lang} missing key: {key}")
                            sys.exit(1)
            
            print("✅ JSON structure is valid")
            print(f"📊 Found {len(data['languages']['en']['channels'])} English channels")
            print(f"📊 Found {len(data['languages']['es']['channels'])} Spanish channels") 
            print(f"📊 Found {len(data['languages']['pt']['channels'])} Portuguese channels")
            
        except json.JSONDecodeError as e:
            print(f"❌ JSON syntax error: {e}")
            sys.exit(1)
        except Exception as e:
            print(f"❌ Validation error: {e}")
            sys.exit(1)
        EOF
